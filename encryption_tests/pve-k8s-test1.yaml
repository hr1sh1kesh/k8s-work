apiVersion: v1
kind: Namespace
metadata:
  name: portworx
---
apiVersion: v1
kind: Secret
metadata:
  name: px-vol-encryption
  namespace: portworx
type: Opaque
data:
  px-k8s-cluster-key: Y2x1c3Rlci1rZXkK
---
apiVersion: v1
kind: Secret
metadata:
  name: vol-enc-01
type: Opaque
data:
  key01: a2V5MDEK
  key02: a2V5MDIK
  key03: a2V5MDMK
  pvc001-k8s-secure-sc-same: cHZjMDAxLWs4cy1zZWN1cmUtc2Mtc2FtZUtleWFzUFZDCg==

---
apiVersion: storage.k8s.io/v1beta1
kind: StorageClass
metadata:
  name: portworx-sc-repl3-secure-k8s
provisioner: kubernetes.io/portworx-volume
parameters:
  repl: "3"
  priority_io: "high"
  secure: "true"
---
apiVersion: storage.k8s.io/v1beta1
kind: StorageClass
metadata:
  name: portworx-sc-repl3-insecure-k8s
provisioner: kubernetes.io/portworx-volume
parameters:
  repl: "3"
  priority_io: "high"
---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ns.default-name.pvc001-k8s-secure-sc-specificKey
  annotations:
    volume.beta.kubernetes.io/storage-class: portworx-sc-repl3-secure-k8s
    px/secret-name: vol-enc-01
    px/secret-namespace: default
    px/secret-key: key01
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ns.default-name.pvc001-k8s-secure-sc-nonamespace
  annotations:
    volume.beta.kubernetes.io/storage-class: portworx-sc-repl3-secure-k8s
    px/secret-name: vol-enc-01
# No namespace so should look for the secret in the same namespace as the PVC. 
    px/secret-key: key01 
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ns.default-name.pvc001-k8s-secure-pvc-secureflag
  annotations:
    volume.beta.kubernetes.io/storage-class: portworx-sc-repl3-secure-k8s
    px/secure: "true" # Flag which encrypts using the cluster secret key
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ns.default-name.pvc001-k8s-secure-pvc-secureflag-with-insecuresc
  annotations:
    volume.beta.kubernetes.io/storage-class: portworx-sc-repl3-insecure-k8s
    px/secure: "true" # Flag which encrypts using the cluster secret key
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ns.default-name.pvc001-k8s-secure-sc-samekeyaspvc
  annotations:
    volume.beta.kubernetes.io/storage-class: portworx-sc-repl3-secure-k8s
    px/secret-name: vol-enc-01
# No namespace so should look for the secret in the same namespace as the PVC. 
    px/secret-key: pvc001-k8s-secure-sc-samekeyaspvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ns.default-name.pvc001-k8s-secure-sc-nokeyprovided
  annotations:
    volume.beta.kubernetes.io/storage-class: portworx-sc-repl3-secure-k8s
    px/secret-name: vol-enc-01
# No namespace so should look for the secret in the same namespace as the PVC. 
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---